#!/usr/bin/bash

print_usage_and_exit()
{
  echo "Usage: $(basename "$0") [-t <second>] [-c <checker>] <program>"
  exit 1
}

check_exist()
{
  if ! hash "$1" &> /dev/null
  then
    echo "$1 couldn't be found" >&2
    exit 1
  fi
}

check_exist cut
check_exist diff
check_exist find
check_exist realpath
check_exist sort
check_exist time
check_exist tput

time_limit=1
checker=

while getopts "t:c:" opt
do
  case ${opt} in
    t)
      time_limit=${OPTARG}
      ;;
    c)
      checker=$(realpath ${OPTARG})
      ;;
    :)
      print_usage_and_exit
      ;;
    ?)
      print_usage_and_exit
      ;;
  esac
done

program=${*:$OPTIND:1}
program_basename=$(basename "${program}")

[[ ! "${program}" ]] && print_usage_and_exit

if [[ ! -x "${program}" ]]
then
  echo "Cannot execute the program. "
  exit 1
fi

if [[ ! -z "${checker}" && ! -x "${checker}" ]]
then
  echo "Cannot execute the checker. "
  exit 1
fi

tmp_file=$(mktemp)

clean() 
{
  rm -f "${tmp_file}"
  tput sgr0
}

trap clean EXIT

testcases=()
while read -r t
do
  testcases+=("${t}")
done < <(find . -name "${program_basename}*.in" | sed "s/.in$//" | sort)
total_cnt=${#testcases[@]}
cnt=0
ac_cnt=0

for ((i = 0; i < ${#testcases[@]}; i++))
do
  t="${testcases[i]}"
  input_file="${t}.in"
  answer_file="${t}.ans"
  ((cnt++))
  echo -n "[${cnt}/${total_cnt}] testing \`${input_file}' and \`${answer_file}' "

  if [[ ! -f ${answer_file} ]]
  then
    echo ": $(tput setaf 7)answer file not found, skipped$(tput sgr0)"
    continue
  fi

  timeout_cmd="{ ./\\\"${program}\\\" < \\\"${input_file}\\\" > \\\"${tmp_file}\\\"; } \
    2> /dev/null"
  resource_usage=$(command time -q -f "%e\t%M" "${SHELL}" -c \
    "timeout \"${time_limit}\" \"${SHELL}\" -c \"${timeout_cmd}\"" 2>&1)
  ret=$?

  time=$(echo "${resource_usage}" | cut -f1)
  mem=$(echo "${resource_usage}" | cut -f2)
  echo -n "(${time}s ${mem}KB) "

  if [[ ${ret} == 124 ]]
  then
    echo ": $(tput setaf 3)TLE$(tput sgr0)"
    continue
  fi

  if [[ ${ret} != 0 ]]
  then
    echo ": $(tput setaf 5)RE$(tput sgr0)"
    continue
  fi

  if [[ -z "${checker}" ]]
  then
    if ! diff -Z "${answer_file}" "${tmp_file}" > /dev/null 2>&1
    then
      echo ": $(tput setaf 1)WA$(tput sgr0)"
      continue
    fi
  else
    if ! "${checker}" "${input_file}" "${tmp_file}" "${answer_file}" > /dev/null 2>&1
    then
      echo ": $(tput setaf 1)WA$(tput sgr0)"
      continue
    fi
  fi

  ((ac_cnt++))
  echo ": $(tput setaf 2)AC$(tput sgr0)"
done

if [[ "${ac_cnt}" != "${total_cnt}" ]]
then
  exit 2
fi
